{"version":3,"sources":["components/LoginForm/styles.tsx","components/Button/index.tsx","util/setColorOpacity.ts","util/schema.tsx","components/LoginForm/index.tsx","pages/Login/index.tsx","components/Heading/index.tsx","components/HomeContent/index.tsx"],"names":["Form","styled","form","props","theme","spacing","s","Label","label","createFontStyles","fonts","b2","StyledLabelText","span","colors","secondary","StyledInput","input","background","primaryVariant","primary","b1","mediaQueries","small","ErrorMessage","Button","button","xs","size","css","b3","variant","onSecondary","onPrimary","onBackground","hex","opacity","replace","parseInt","substring","withComponent","LoginSchema","yup","shape","userName","required","password","min","LoginForm","useForm","validationSchema","handleSubmit","register","errors","history","useHistory","Heading","content","isPrimaryColor","onSubmit","data","push","type","name","placeholder","ref","message","Login","HomeContent","Element","h1","m","l","Wrapper","div","children"],"mappings":"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","file":"static/js/8.3c783cc5.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport createFontStyles from '../../util/createFontStyles';\n\nexport const Form = styled.form`\n  max-width: 480px;\n  margin: 0 auto;\n  padding: ${props => props.theme.spacing.s}rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  button {\n    margin-top: ${props => props.theme.spacing.s}rem;\n  }\n`;\n\nexport const Label = styled.label`\n  ${props => createFontStyles(props.theme.fonts.b2)};\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin: ${props => props.theme.spacing.s}rem 0;\n`;\n\nexport const StyledLabelText = styled.span`\n  width: 40%;\n  border: 1px solid ${props => props.theme.colors.secondary};\n  color: ${props => props.theme.colors.secondary};\n  padding: 0 32px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  ${props => createFontStyles(props.theme.fonts.b2)};\n`;\n\nexport const StyledInput = styled.input`\n  height: 40px;\n  width: 60%;\n  background-color: ${props => props.theme.colors.background};\n  border: 1px solid ${props => props.theme.colors.primaryVariant};\n  border-bottom: 2px solid ${props => props.theme.colors.primary};\n  padding: 0 32px;\n  outline: none;\n  transition: border-color 0.1s ease-in-out;\n  ${props => createFontStyles(props.theme.fonts.b1)};\n\n  &::placeholder {\n    color: ${props => props.theme.colors.primaryVariant};\n  }\n  &:active,\n  &:focus {\n    border-bottom: 2px solid ${props => props.theme.colors.secondary};\n  }\n  &:disabled {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n  &:placeholder-shown {\n    border: 1px solid ${props => props.theme.colors.primaryVariant};\n  }\n\n  @media all and (min-width: ${props => props.theme.mediaQueries.small}px) {\n    min-width: 150px;\n  }\n`;\n\nexport const ErrorMessage = styled.span`\n  ${props => createFontStyles(props.theme.fonts.b2)};\n`;\n","import styled, { css } from 'styled-components';\nimport createFontStyles from '../../util/createFontStyles';\nimport setColorOpacity from '../../util/setColorOpacity';\n\ntype Size = 'small' | 'medium' | 'large';\ntype Variant = 'primary' | 'secondary' | 'tertiary' | 'quaternary';\n\ninterface ButtonProps {\n  size: Size;\n  variant: Variant;\n}\n\nconst Button = styled.button<ButtonProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  text-decoration: none;\n  width: fit-content;\n  border: 2px solid transparent;\n  transition: border-color 0.15s ease-in-out, background-color 0.15s ease-in-out;\n  &:disabled {\n    pointer-events: none;\n    opacity: 0.6;\n  }\n  svg {\n    width: 24px;\n    height: 24px;\n    margin-left: ${props => props.theme.spacing.xs}rem;\n  }\n  ${props =>\n    props.size === 'small' &&\n    css`\n      height: 40px;\n      min-width: 75px;\n      padding: 0 32px;\n      ${createFontStyles(props.theme.fonts.b2)};\n\n      @media all and (min-width: ${props => props.theme.mediaQueries.small}px) {\n        padding: 0 20px;\n      }\n    `};\n  ${props =>\n    props.size === 'medium' &&\n    css`\n      height: 42px;\n      width: 100%;\n      padding: 0 20px;\n      ${createFontStyles(props.theme.fonts.b2)};\n\n      @media all and (min-width: ${props => props.theme.mediaQueries.small}px) {\n        width: 160px;\n      }\n    `};\n  ${props =>\n    props.size === 'large' &&\n    css`\n      height: 45px;\n      min-width: 250px;\n      padding-left: 75px;\n      padding-right: 75px;\n      border-radius: 35px;\n      ${createFontStyles(props.theme.fonts.b3)};\n\n      @media all and (min-width: ${props => props.theme.mediaQueries.small}px) {\n        height: 50px;\n      }\n    `};\n  ${props =>\n    props.variant === 'primary' &&\n    css`\n      background-color: ${props => props.theme.colors.secondary};\n      color: ${props => props.theme.colors.onSecondary};\n      &:hover,\n      &:active,\n      &:focus {\n        opacity: 0.9;\n      }\n      svg {\n        fill: ${props => props.theme.colors.onPrimary};\n      }\n    `};\n  ${props =>\n    props.variant === 'secondary' &&\n    css`\n      background-color: ${props => props.theme.colors.background};\n      border-color: ${props => props.theme.colors.secondary};\n      color: ${props => props.theme.colors.onBackground};\n      svg {\n        fill: ${props => props.theme.colors.secondary};\n      }\n      &:hover,\n      &:active,\n      &:focus {\n        background-color: ${props => props.theme.colors.secondary};\n        color: ${props => props.theme.colors.onSecondary};\n        svg {\n          fill: ${props => props.theme.colors.onSecondary};\n        }\n      }\n    `};\n  ${props =>\n    props.variant === 'tertiary' &&\n    css`\n      background-color: ${props => props.theme.colors.background};\n      color: ${props => props.theme.colors.onBackground};\n      border: none;\n      &:hover,\n      &:active,\n      &:focus {\n        background-color: ${props => setColorOpacity(props.theme.colors.background, '0.8')};\n      }\n      svg {\n        fill: ${props => props.theme.colors.onBackground};\n      }\n    `};\n  ${props =>\n    props.variant === 'quaternary' &&\n    css`\n      background-color: transparent;\n      color: ${props => props.theme.colors.onPrimary};\n      border-color: ${props => props.theme.colors.onPrimary};\n      &:hover,\n      &:active,\n      &:focus {\n        background-color: ${props => props.theme.colors.onPrimary};\n        color: ${props => props.theme.colors.onBackground};\n        svg {\n          fill: ${props => props.theme.colors.onBackground};\n        }\n      }\n      svg {\n        fill: ${props => props.theme.colors.onPrimary};\n      }\n    `};\n`;\n\nconst ButtonExternal = Button.withComponent('a');\nconst ButtonInput = Button.withComponent('input');\n\nexport default Button;\nexport { ButtonExternal, ButtonInput };\n","export default function setColorOpacity(hex: string, opacity: string): string {\n  hex = hex.replace('#', '');\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n\n  const result = 'rgba(' + r + ',' + g + ',' + b + ',' + opacity + ')';\n  return result;\n}\n","import * as yup from 'yup';\n\nconst LoginSchema: yup.ObjectSchema = yup.object().shape({\n  userName: yup.string().required('🔥Invalid user name.'),\n  password: yup.string().min(4, '🔥At least four characters.'),\n});\n\nexport default LoginSchema;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { Form, StyledInput, Label, StyledLabelText, ErrorMessage } from './styles';\nimport Button from '../Button';\nimport Heading from '../Heading';\nimport LoginSchema from '../../util/schema';\n\ninterface Props {}\n\nconst LoginForm: React.FC<Props> = () => {\n  const { handleSubmit, register, errors } = useForm({\n    validationSchema: LoginSchema,\n  });\n\n  let history = useHistory();\n\n  //@ts-ignore\n  const onSubmit = data => {\n    if (data.userName && data.password) {\n      history.push('/profile');\n    }\n  };\n\n  //@ts-ignore\n  return (\n    <>\n      <Heading content=\"Login\" isPrimaryColor />\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Label>\n          <StyledLabelText>Username</StyledLabelText>\n          <StyledInput type=\"text\" name=\"userName\" placeholder=\"Your username\" ref={register} />\n        </Label>\n        {/* \n      // @ts-ignore */\n        errors.userName && <ErrorMessage>{errors.userName.message}</ErrorMessage>}\n        <Label>\n          <StyledLabelText>Password</StyledLabelText>\n          <StyledInput type=\"password\" name=\"password\" placeholder=\"Your password\" ref={register} />\n        </Label>\n        {/* \n      // @ts-ignore */\n        errors.password && <ErrorMessage>{errors.password.message}</ErrorMessage>}\n        <Button size=\"medium\" variant=\"primary\" type=\"submit\">\n          Login\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import * as React from 'react';\nimport HomeContent from '../../components/HomeContent';\nimport LoginForm from '../../components/LoginForm';\n\ninterface Props {}\n\nexport const Login: React.FunctionComponent<Props> = () => {\n  return (\n    <>\n      <HomeContent>\n        <LoginForm />\n      </HomeContent>\n    </>\n  );\n};\n\nexport default Login;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport createFontStyles from '../../util/createFontStyles';\n\ninterface HeadingProps {\n  content: string;\n  isPrimaryColor?: boolean;\n}\n\nconst Element = styled.h1<{ isPrimaryColor?: boolean }>`\n  margin: ${props => props.theme.spacing.m}rem auto;\n  color: ${props =>\n    props.isPrimaryColor ? props.theme.colors.primary : props.theme.colors.secondary};\n  ${props => createFontStyles(props.theme.fonts.h1)};\n  text-align: center;\n\n  @media all and (min-width: 600px) {\n    margin: ${props => props.theme.spacing.l}rem 0;\n  }\n`;\n\nconst Heading: React.FC<HeadingProps> = ({ content, isPrimaryColor }) => {\n  return <Element isPrimaryColor={isPrimaryColor}>{content}</Element>;\n};\n\nexport default Heading;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${props => props.theme.spacing.m}rem;\n  max-width: 1440px;\n  margin: 0 auto;\n`;\n\ninterface Props {}\n\nexport const HomeContent: React.FunctionComponent<Props> = ({ children }) => {\n  if (!children) return null;\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default HomeContent;\n"],"sourceRoot":""}