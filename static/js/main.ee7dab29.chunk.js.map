{"version":3,"sources":["util/createFontStyles.ts","util/defaultTheme.ts","components/ThemeWrapper/index.tsx","components/Header/styles.tsx","hooks/useIsDesktop.ts","components/Header/index.tsx","pages/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["createFontStyles","font","css","family","weight","size","lineHeight","defaultMediaQueries","small","medium","large","defaultFontFamily","defaultFontWeight","defaultTheme","spacing","xs","s","m","l","xl","fonts","h1","h2","h3","h4","h5","h6","b1","b2","b3","mediaQueries","colors","primary","primaryVariant","secondary","secondaryVariant","background","surface","error","onPrimary","onSecondary","onBackground","onSurface","onError","GlobalStyle","createGlobalStyle","props","theme","Content","styled","div","ThemeWrapper","children","Wrapper","header","Nav","nav","NavLinkList","ul","NavLink","Link","LoginButton","MenuLeft","MenuRight","useIsDesktop","useState","isDesktop","setIsDesktop","useEffect","window","innerWidth","Header","location","useLocation","to","pathname","Home","lazy","News","Login","Profile","Layout","path","fallback","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ee7dab29.chunk.js","sourcesContent":["import { css, FlattenInterpolation, ThemeProps, DefaultTheme } from 'styled-components';\nimport { Font, Theme } from '../types/theme';\n\nfunction createFontStyles(font: Font): FlattenInterpolation<ThemeProps<DefaultTheme & Theme>> {\n  return css`\n    font-family: ${font.family};\n    font-weight: ${font.weight};\n    font-size: ${font.size}rem;\n    ${font.lineHeight &&\n      css`\n        line-height: ${font.lineHeight};\n      `};\n  `;\n}\n\nexport default createFontStyles;\n","import {\n  Theme,\n  IColors,\n  Font,\n  IFontFamily,\n  IFontWeight,\n  IFonts,\n  IMediaQueries,\n  ISpacing,\n} from '../types/theme';\n\nconst defaultColors: IColors = {\n  primary: '#2B2928',\n  primaryVariant: '#555453',\n  secondary: '#3f18aa',\n  secondaryVariant: '#3d17a5',\n  background: '#ffffff',\n  surface: '#f7f8f6',\n  error: '#e4d815',\n  onPrimary: '#f7f8f6',\n  onSecondary: '#ffffff',\n  onBackground: '#2B2928',\n  onSurface: '#2B2928',\n  onError: '#ffffff',\n};\n\nexport const defaultMediaQueries: IMediaQueries = {\n  small: 600,\n  medium: 768,\n  large: 1280,\n};\n\nconst defaultSpacing: ISpacing = {\n  xs: 0.5,\n  s: 1,\n  m: 1.5,\n  l: 3,\n  xl: 5,\n};\n\nconst defaultFontFamily: IFontFamily = {\n  primary: \"'Muli', sans-serif\",\n};\n\nconst defaultFontWeight: IFontWeight = {\n  regular: 400,\n  semiBold: 600,\n  bold: 700,\n};\n\nconst h1: Font = {\n  family: defaultFontFamily.primary,\n  weight: defaultFontWeight.bold,\n  size: 3.125,\n  lineHeight: 1.15,\n};\n\nconst h2: Font = {\n  family: defaultFontFamily.primary,\n  weight: defaultFontWeight.bold,\n  size: 2.1875,\n  lineHeight: 1.15,\n};\n\nconst h3: Font = {\n  family: defaultFontFamily.primary,\n  weight: defaultFontWeight.bold,\n  size: 1.5625,\n  lineHeight: 1.15,\n};\n\nconst h4: Font = {\n  family: defaultFontFamily.primary,\n  weight: defaultFontWeight.bold,\n  size: 1.25,\n  lineHeight: 1.15,\n};\n\nconst h5: Font = {\n  family: defaultFontFamily.primary,\n  weight: defaultFontWeight.regular,\n  size: 1.125,\n  lineHeight: 1.15,\n};\n\nconst h6: Font = {\n  family: defaultFontFamily.primary,\n  weight: defaultFontWeight.bold,\n  size: 1,\n  lineHeight: 1.15,\n};\n\nconst b1: Font = {\n  family: defaultFontFamily.primary,\n  weight: defaultFontWeight.regular,\n  size: 1,\n  lineHeight: 1.5,\n};\n\nconst b2: Font = {\n  family: defaultFontFamily.primary,\n  weight: defaultFontWeight.bold,\n  size: 1.125,\n  lineHeight: 1.15,\n};\n\nconst b3: Font = {\n  family: defaultFontFamily.primary,\n  weight: defaultFontWeight.bold,\n  size: 1.125,\n  lineHeight: 1.15,\n};\n\nexport const defaultFonts: IFonts = {\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  b1,\n  b2,\n  b3,\n};\n\nexport const defaultTheme: Theme = {\n  spacing: defaultSpacing,\n  fonts: defaultFonts,\n  mediaQueries: defaultMediaQueries,\n  colors: defaultColors,\n};\n\nexport default defaultTheme;\n","import * as React from 'react';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport createFontStyles from '../../util/createFontStyles';\nimport { defaultTheme } from '../../util/defaultTheme';\n\nexport interface Props {}\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    -webkit-font-smoothing: antialiased;\n    color: ${props => props.theme.colors.onBackground};\n    ${props => createFontStyles(props.theme.fonts.b1)}\n  }\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nconst Content = styled.div``;\n\nconst ThemeWrapper: React.FunctionComponent<Props> = ({ children }) => (\n  <ThemeProvider theme={defaultTheme}>\n    <div>\n      <GlobalStyle />\n      <Content>{children}</Content>\n    </div>\n  </ThemeProvider>\n);\n\nexport default ThemeWrapper;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.header`\n  width: 100%;\n  background: ${props => props.theme.colors.secondaryVariant};\n  color: ${props => props.theme.colors.onSecondary};\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const NavLinkList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  list-style-type: none;\n  }\n`;\n\nexport const NavLink = styled(Link)`\n  color: ${props => props.theme.colors.onSecondary};\n  font-size: 1.75rem;\n  font-weight: bold;\n  margin-right: ${props => props.theme.spacing.s}rem;\n  text-decoration: none;\n  padding: 0.5rem 1.5rem;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const LoginButton = styled(NavLink)`\n  border: 2px solid ${props => props.theme.colors.onSecondary};\n  list-text-style: none;\n  padding: 0.5rem 1.5rem;\n`;\n\nexport const MenuLeft = styled.div`\n  flex: 1;\n  display: flex;\n`;\n\nexport const MenuRight = styled.div`\n  list-style-type: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { defaultMediaQueries } from '../util/defaultTheme';\n\nfunction useIsDesktop(): boolean {\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  useEffect(() => {\n    if (typeof window !== 'undefined' && window.innerWidth > defaultMediaQueries.large) {\n      setIsDesktop(true);\n    }\n  }, []);\n  return isDesktop;\n}\n\nexport default useIsDesktop;\n","import * as React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Wrapper, Nav, MenuLeft, MenuRight, NavLinkList, NavLink, LoginButton } from './styles';\nimport ThemeWrapper from '../ThemeWrapper';\nimport useIsDesktop from '../../hooks/useIsDesktop';\n\nconst Header: React.FC = () => {\n  let location = useLocation();\n  const isDesktop = useIsDesktop();\n  return (\n    <ThemeWrapper>\n      <Wrapper>\n        <Nav>\n          <NavLinkList>\n            <NavLink to=\"/\">L-o-G-o</NavLink>\n            {isDesktop && (\n              <MenuLeft>\n                <li>\n                  <NavLink to=\"/\">Home</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/news\">News List</NavLink>\n                </li>\n              </MenuLeft>\n            )}\n          </NavLinkList>\n          <MenuRight>\n            <li>\n              <LoginButton to=\"/login\">\n                {location.pathname === '/profile' ? 'Log Out' : 'Login'}\n              </LoginButton>\n            </li>\n          </MenuRight>\n        </Nav>\n      </Wrapper>\n    </ThemeWrapper>\n  );\n};\n\nexport default Header;\n","import React, { lazy, Suspense } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport ThemeWrapper from '../components/ThemeWrapper';\nimport Header from '../components/Header';\n\nconst Home = lazy(() => import('./Home'));\nconst News = lazy(() => import('./News'));\nconst Login = lazy(() => import('./Login'));\nconst Profile = lazy(() => import('./Profile'));\n\ninterface Props {}\n\nconst Layout: React.FunctionComponent<Props> = () => {\n  return (\n    <ThemeWrapper>\n      <BrowserRouter>\n        <div>\n          <Header />\n          <Switch>\n            <Route path=\"/profile\">\n              <Suspense fallback={<h1>Hellow</h1>}>\n                <Profile />\n              </Suspense>\n            </Route>\n            <Route path=\"/login\">\n              <Suspense fallback={<h1>Hellow</h1>}>\n                <Login />\n              </Suspense>\n            </Route>\n            <Route path=\"/news\">\n              <Suspense fallback={<h1>Hellow</h1>}>\n                <News />\n              </Suspense>\n            </Route>\n            <Route path=\"/\">\n              <Suspense fallback={<h1>Hellow</h1>}>\n                <Home />\n              </Suspense>\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </ThemeWrapper>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport './App.css';\nimport Layout from './pages/Layout';\n\nfunction App() {\n  return <Layout />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}